; REQUIRES: cocoa
; EXPECT: sat

(set-logic QF_FF)
(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(define-sort F () (_ FiniteField 21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const x0 F)
(declare-const x1 F)
(declare-const x2 F)
(declare-const x3 F)
(declare-const x4 F)
(declare-const p F)
(assert (= p #f21888242871839275222246405745257275088548364400416034343698204186575808495617m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const ps1 F)
(assert (= ps1 #f21888242871839275222246405745257275088548364400416034343698204186575808495616m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const ps2 F)
(assert (= ps2 #f21888242871839275222246405745257275088548364400416034343698204186575808495615m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const ps3 F)
(assert (= ps3 #f21888242871839275222246405745257275088548364400416034343698204186575808495614m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const ps4 F)
(assert (= ps4 #f21888242871839275222246405745257275088548364400416034343698204186575808495613m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const ps5 F)
(assert (= ps5 #f21888242871839275222246405745257275088548364400416034343698204186575808495612m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const zero F)
(assert (= zero #f0m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(declare-const one F)
(assert (= one #f1m21888242871839275222246405745257275088548364400416034343698204186575808495617))
(assert (or (= zero x4) (= zero x1)))
(assert (or (= zero (ff.add ps1 x4)) (= zero x2)))
(assert (= zero (ff.add x1 (ff.add x2 (ff.mul ps1 x3)))))
(assert (or (= zero (ff.add ps1 x3)) (= zero x3)))
(assert (= #f1m21888242871839275222246405745257275088548364400416034343698204186575808495617 x0))
(declare-const y0 F)
(declare-const y1 F)
(declare-const y2 F)
(declare-const y3 F)
(declare-const y4 F)
(assert (or (= zero y4) (= zero y1)))
(assert (or (= zero (ff.add (ff.mul ps1 y0) y4)) (= zero y2)))
(assert (= zero (ff.add y1 (ff.add y2 (ff.mul ps1 y3)))))
(assert (or (= zero (ff.add (ff.mul ps1 y0) y3)) (= zero y3)))
(assert (= #f1m21888242871839275222246405745257275088548364400416034343698204186575808495617 y0))
(assert (= x0 y0))
(assert (= x4 y4))
; (assert (= #f1m21888242871839275222246405745257275088548364400416034343698204186575808495617 y1))
; (assert (= #f21888242871839275222246405745257275088548364400416034343698204186575808495616m21888242871839275222246405745257275088548364400416034343698204186575808495617 y2))
; (assert (= #f0m21888242871839275222246405745257275088548364400416034343698204186575808495617 y3))
; (assert (= #f0m21888242871839275222246405745257275088548364400416034343698204186575808495617 y4))
(assert (not (= x1 y1)))
(check-sat)
(get-model)

