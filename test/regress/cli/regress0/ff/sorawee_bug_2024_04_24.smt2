(set-logic QF_FF)
(set-option :ff-solver int)
(set-option :status unsat)
(set-option :produce-models true)
(define-sort F () (_ FiniteField 28948022309329048855892746252171976963363056481941560715954676764349967630337))
;; ### BEGIN
(declare-fun c4 () F) ; 0
; (define-fun c4 () F (as ff0 F))
(declare-fun c7 () F) ; 0
; (define-fun c7 () F (as ff0 F))
(declare-fun c17 () F); -1/2
; (define-fun c17 () F (as ff14474011154664524427946373126085988481681528240970780357977338382174983815168 F))
;; ### END
(define-fun C () F (as ff14474011154664524427946373126085988481681528240970780357977338382174983815169 F))
(define-fun c0 () F (as ff0 F))
(define-fun e1 () Bool (= (as ff0 F) c0))
(define-fun e2 () Bool (= (as ff1 F) c0))
(define-fun e3 () Bool (or e1 e2))
(define-fun e5 () Bool (ff.lt c4 C))
(define-fun e6 () Bool (and e3 e5))
(define-fun e8 () F (ff.mul (as ff2 F) c4))
(define-fun e9 () F (ff.add c0 e8))
(define-fun e10 () Bool (= c7 e9))
(define-fun e11 () Bool (and e6 e10))
(define-fun c12 () F (as ff1 F))
(define-fun e13 () Bool (= (as ff0 F) c12))
(define-fun e14 () Bool (= (as ff1 F) c12))
(define-fun e15 () Bool (or e13 e14))
(define-fun e16 () Bool (and e11 e15))
(define-fun e18 () Bool (ff.lt c17 C))
(define-fun e19 () Bool (and e16 e18))
(define-fun e20 () F (ff.mul (as ff2 F) c17))
(define-fun e21 () F (ff.add c12 e20))
(define-fun e22 () Bool (= c7 e21))
(assert (and e19 e22))
(assert (not (=> (and e14 (not (= (as ff0 F) c7))) (and e2 (not (= (as ff0 F) c7))))))
(check-sat)
(get-model)

